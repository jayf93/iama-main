if(jQuery)jQuery.fn.animateForm=function(props={}){props.container=this.selector;if(!props.project||!props.flow)throw new Error('ERROR: iama needs a project ID and Flow ID to continue.') return new AnimateForm(props);};class AnimateForm{constructor(props){this.container=props.container||"#iama";this.pathObj=props.pathObj||false;this.start=props.start||'a';this.triggerCallback=props.triggerCallback||this.triggerCallback;this.triggerEnd=props.triggerEnd||this.triggerEnd;this.triggerPath=props.triggerPath||this.triggerPath;this.dataObj={};this.events=new Events();this.history=props.history||[];this.session=this.getSession(props.project);this.project=props.project;this.flowId=props.flow;this.user=this.getUser();this.pixelF;this.stepPercentage=props.stepPercentage||10;this.version='0.2.0';this.init();} generateRandomId(len=30){var dec2hex=dec=>{return('0'+dec.toString(16).substr(-2))} let arr=new Uint8Array((len||30)/2);window.crypto.getRandomValues(arr);return Array.from(arr,dec2hex).join('');} getSession(project){return sessionStorage.getItem(`iama-${project}`)||this.generateRandomId();} getUser(){let user=localStorage.getItem('iama-user');if(!user){user=this.generateRandomId();localStorage.setItem('iama-user',user)} return user;} initPixel(){let _this=this;this.pixelF=document.createElement('iframe');this.pixelF.style.display="none";this.pixelF.src=`https:document.body.appendChild(this.pixelF);$(window).on('beforeunload',e=>{_this.logPixelEvent({user:_this.user,session:_this.session,stage:'end_session',value:'end_session'})})} logPixelEvent(data){let pixelUrl=`https:?u=${encodeURIComponent(this.user)}&s=${encodeURIComponent(this.session)}&t=${encodeURIComponent(data.stage)}&v=${encodeURIComponent(data.value)}&q=${encodeURIComponent(data.stage)}`;this.pixelF.src=pixelUrl;} switchPath(data,props={}){if(!data.path||data.path==="undefined"||data.end)return this.triggerEnd(this.dataObj);let path=this.pathObj[data.path][0];console.log(path);let m=new AnimateMessage(Object.assign(path,{previous:data.path}),data.path).render();$(this.container).hide().html(m).fadeIn();if(!props.previous){this.history.push(Object.assign(path,{path:data.path}));$('.iama-perm-progress-bar').animate({width:$('.iama-perm-progress-bar').width((i,val)=>val+=$('.iama-perm-progress-bar').width()>=$('.iama-perm-progress').width()?0:($('.iama-perm-progress').width()*(this.stepPercentage/100)))})}else{$('.iama-perm-progress-bar').animate({width:$('.iama-perm-progress-bar').width((i,val)=>val-=$('.iama-perm-progress-bar').width()<=0?0:($('.iama-perm-progress').width()*(this.stepPercentage/100)))})} this.history&&this.history.length>1?$('#iama-perm-back').fadeIn():$('#iama-perm-back').fadeOut();this.initListeners();this.events.emit(data.path);} insertBackButton(p,d){return`<div style="display:none;"class="iama-back-btn"id="iama-perm-back"><span>Back</span></div>`;} handleBack(e){this.history.pop();let path=this.getPrevious();console.log(path) this.handleSidebarReverse(path);let p=this.history[this.history.length-1];this.switchPath(this.history[this.history.length-1],{previous:true});} handleSidebarReverse(path){$(`[data-step="${path.path}"]`).fadeOut('normal',function(){$(this).remove()});} getPathObj(){let _this=this;return new Promise(function(resolve,reject){if(_this.pathObj)resolve(_this.pathObj);else $.get(`https:resolve(v&&v.result?JSON.parse(v.result):{});})});} init(){this.getPathObj().then(path=>{console.log(path) this.pathObj=path;let initMsg=path[this.start][0] let a=new AnimateMessage(initMsg,this.start).render() $(this.container).html(`<div id="iama-inner-a"class="iama-inner-a"></div><div id="iama-inner-b"class="iama-inner-b"><div id="iama-perm-progress"class="iama-perm-progress"><div class="iama-perm-progress-bar"></div></div>${this.insertBackButton()}</div>`);this.container="#iama-inner-a";$(this.container).hide().html(a).fadeIn();$('#iama-perm-back').click(e=>this.handleBack(e));this.history.push(Object.assign(initMsg,{path:this.start})) this.initListeners() this.initPixel();})} triggerCallback(){} triggerPath(){} triggerEnd(){} getPrevious(){return this.history[this.history.length-1]} initListeners(){if($('.animate-message-action-button'))$('.animate-message-action-button').off().click(e=>this.manageRoutes(e));if($('.animate-message-action-checkbox'))$('.animate-message-action-checkbox, .animate-button-carat').off().click(e=>this.manageChecks(e));if($('.animate-message-action-input')){$('.animate-message-action-input').off().on('keypress',e=>e.which===13?this.manageRoutes(e):null) $('.animate-message-action-input').focus();} if($('.animate-message-action-select'))$('.animate-message-action-select').off().change(e=>$(e.target).data($(e.target).find(':selected').data())&&this.manageRoutes(e));if($('.tab_main')){$('.tab_main').off().on('click',e=>{let $el=$(e.target).hasClass('tab_main')?$(e.target):$(e.target).parent();$('.tab_main').removeClass('w--current') $el.addClass('w--current');$('.w-tab-pane').css('opacity',0).removeClass('w--tab-active').hide();let data=$el.data('w-tab') $(`.w-tab-pane[data-w-tab="${data}"]`).css('opacity',1).addClass('w--tab-active').show();})}} manageRoutes(e){let $el=$(e.target),data=$el.data();data.value=data.value||data.text||$el.val();this.logPixelEvent(data);this.updateSidebar(data);this.switchPath(data);this.triggerCallback(data);this.dataObj[data.stage]=data.value;} manageChecks(e){let $el=!$(e.target).hasClass('animate-message-action-checkbox')?$(e.target).parents('.animate-message-action-checkbox'):$(e.target);let checkedIcon=`<span>&#10003;</span>`;let uncheckedIcon=`<div class="iama-checkbox-unchecked"></div>`;$el.toggleClass('unchecked').toggleClass('checked');$el.find('.animate-button-carat').html($el.hasClass('checked')?checkedIcon:uncheckedIcon) $el.data('checked',$el.hasClass('checked'));} updateSidebar(data){$(`<div class="row iama-sidebar-row"data-step="${data.currentpath}"data-rn="${$('.iama-sidebar-row').length}"><div class="col-sm-2 no-padding"><div class="lime-section-container"><div class="lime-section lime-ball"></div></div></div><div class="col-sm-10 no-padding pr-4"><span class="lime-section-text lime-breadcrumb active">${data.message}</span><div class="mb-3"><span><b>${data.value}</b></span></div></div></div>`).hide().appendTo('#iama-sidebar-text').fadeIn();}} class AnimateMessage{constructor(props,path){this.message=props.message||"Message";this.buttons=props.buttons||[];this.props=props||{};this.currentPath=path;this.template_type=props.template_type||'button';this.data=props.data?Object.assign(props.data,{message:props.message}):{};} addButtons(buttons=[],data={}){let html="<div class="animate-message-buttons-container">" let width=buttons.length>1?"50%":"100%";buttons.forEach(button=>{if(button.type==="web_url"){html+=`<div class="animate-message-td"><a href="${button.url}"><div><button class="button animate-message-action-button"data-currentPath="${this.currentPath}"data-text="${button.text}"data-path="${button.path}"${this.returnDataParams(data)}>${button.text}<div class="animate-button-carat"><i class="caret right"></i></div></button></div></a></div>`}else{html+=`<div class="animate-message-td"><button class="button animate-message-action-button"data-currentPath="${this.currentPath}"data-text="${button.text}"data-path="${button.path}"${this.returnDataParams(data)}>${button.text}<div class="animate-button-carat"><i class="caret right"></i></div></button></div>`}}) html+="</div>" return html} addInput(input={},data={}){return`<div class="animate-message-input-container"><input class="animate-message-action-input"type="text"placeholder="${input.placeholder || ""}"data-currentPath="${this.currentPath}"data-path="${input.path}"${this.returnDataParams(data)}></input></div>`} addSelect(options=[],data={}){let html="<option value=''>-- Select One --</option>";options.forEach(option=>html+=`<option value="${option.text}"data-path="${option.path}"data-currentPath="${this.currentPath}"${this.returnDataParams(data)}>${option.text}</option>`) return`<div class="animate-message-select-container"><select class="animate-message-action-select">${html}</select></div>`} addMultiButton(options=[],data={}){let htmlHead="",htmlButton="";let addHeader=(option,n)=>{return htmlHead+=`<a data-w-tab="${option.title}"class="tab_main w-inline-block w-tab-link ${n === 0 ? "w--current" : ""}"><div class="text-block-6">${option.title}</div></a>`;} let addButton=(option,n)=>{htmlButton+=`<div data-w-tab="${option.title}"class="w-tab-pane ${n === 0 ? "w--tab-active" : ""}"style="${n === 0 ? "opacity:1" : "display:none"}; transition: opacity 300ms ease 0s;"><div class="location_ist_wrapper w-dyn-list"><div class="w-dyn-items w-row">${this.addButtons(option.buttons,this.data)}</div></div></div>`;};options.forEach((option,n)=>addHeader(option,n)&&addButton(option,n)) let html=`<div class="tabs-menu w-tab-menu mt-4 mb-2">${htmlHead}</div><div class="w-tab-content">${htmlButton}</div>`;return html;} addCheckBox(options=[],data=[]){let htmlChecks="";let addCheck=(option,n)=>{return htmlChecks+=`<div class="animate-message-td"><button class="button animate-message-action-checkbox iama-checkbox unchecked"data-state="unchecked"data-currentPath="${this.currentPath}"data-text="${option.text}"data-path="${option.path}"${this.returnDataParams(data)}>${option.text}<div class="animate-button-carat"><div class="iama-checkbox-unchecked"></div></div></button></div>`} let addCheckContinue=()=>{return`<div class="iama-checkbox-action"><button class="button animate-message-action-button"data-state="unchecked"data-currentPath="${this.currentPath}"data-text="Continue"data-path="${data.path}"${this.returnDataParams(data)}>Continue<div class="animate-button-carat"><i class="caret right"></i></div></button></div>`} options.forEach((option,n)=>addCheck(option,n));let html=`<div class="animate-message-checkbox-container"><div class="iama-checkbox-container">${htmlChecks}</div>${addCheckContinue()}</div>`;return html;} addTemplate(){switch(this.template_type){case'input':return this.addInput(this.props.input,this.data);break;case'select':return this.addSelect(this.props.options,this.data);break;case'multi-button':return this.addMultiButton(this.props.options,this.data);break;case'checkbox':return this.addCheckBox(this.props.options,this.data);break;default:return this.addButtons(this.buttons,this.data);break;}} returnDataParams(data,prev){if(!data)return"";let html="";Object.keys(data).forEach(key=>html+=`data-${key}="${data[key]}"`) return html} render(){return`<div class="animate-message"><div class="animate-message-inner"><div class="animate-message-text"><span>${this.message}</span></div><div class="animate-message-buttons">${this.addTemplate()}</div></div></div>`}} class Events{constructor(){this.events={};} on(event,fn){if(typeof event!=='string')return null;if(!this.events[event])this.events[event]=new Set();this.events[event].add(fn);} emit(event,args){let self=this;this.events[event]&&this.events[event].forEach(fn=>{fn.apply(this,[args]);})}}
